{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/Contacts.module.css","App.module.css"],"names":["module","exports","ContactForm","state","name","number","checkedName","props","contacts","find","contact","toLowerCase","alert","reset","handleChangeName","e","target","value","setState","console","log","handleSubmit","evt","preventDefault","onSubmit","this","className","s","form","labelForm","inputForm","type","placeholder","pattern","title","required","onChange","onBlur","btnForm","disabled","Component","ContactList","onDeleteContact","list","map","id","list__item","list__item__tel","button","onClick","proTotypes","PropTypes","array","isRequired","func","Filter","filter","onChangeName","resetFiler","label","input","protoTypes","string","App","addContact","shortid","generate","prevState","getVisibleContacts","normalizedFilter","toLocaleLowerCase","includes","deleteContact","contactId","visibleContacts","container","phonebook","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf14a2ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2BqS1\",\"input\":\"Filter_input__1T410\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1B2Qb\",\"labelForm\":\"ContactForm_labelForm__2RMFR\",\"inputForm\":\"ContactForm_inputForm__2_Iv7\",\"btnForm\":\"ContactForm_btnForm__3OAPM\"};","  import s from './ContactForm.module.css';\r\n  import PropTypes from 'prop-types';\r\n  import React, {Component} from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n \r\n  checkedName = ()=> {\r\n    const {name} = this.state\r\n    if (this.props.contacts.find(contact => \r\n      contact.name.toLowerCase() === name.toLowerCase()))\r\n      {alert(`${name} is already in contacts.`)\r\n      this.reset()\r\n      }\r\n      \r\n  }\r\n\r\n\r\n  handleChangeName = e =>{\r\n    const {name, value} = e.target\r\n    this.setState({ [name]: value})\r\n      console.log(name)\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset()\r\n  };\r\n\r\n  reset =()=> {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {name, number} = this.state\r\n    return (\r\n  <form className={s.form} onSubmit={this.handleSubmit}>\r\n    <label className={s.labelForm}>Name\r\n      <input className={s.inputForm}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Sara Winters\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={this.handleChangeName}\r\n        onBlur={this.checkedName }\r\n      />\r\n    </label>\r\n    <label className={s.labelForm}>Number\r\n      <input className={s.inputForm}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"123-45-67\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={this.handleChangeName}\r\n        />\r\n      </label>\r\n  \r\n    <button className={s.btnForm} type=\"submit\" disabled={!name}>Add contact</button>\r\n  </form>\r\n   );} \r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n}\r\nexport default ContactForm;","import s from './Contacts.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList =({contacts, onDeleteContact}) => (\r\n    <ul className={s.list}>\r\n        {contacts.map(({id, name, number}) => (\r\n            <li key={id}\r\n            className={s.list__item}>\r\n              {name}:\r\n                <span className={s.list__item__tel}>{number}</span>\r\n            <button className={s.button} onClick={()=>onDeleteContact(id)}>Delete</button>\r\n            </li>\r\n        ))\r\n        }\r\n\r\n    </ul>\r\n)\r\n\r\nContactList.proTotypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({filter, onChangeName, resetFiler})=> (\r\n<label className={s.label}>Find contacts by name\r\n      <input className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          placeholder=\"input name/number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        //   title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={filter}\r\n          onChange={onChangeName}\r\n          onBlur={resetFiler}\r\n        />\r\n      </label>\r\n)\r\n\r\nFilter.protoTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeName: PropTypes.func,\r\n  onBlur: PropTypes.func\r\n}\r\n\r\nexport default Filter\r\n\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport contacts from './components/ContactsList/contacts.json'\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: '',\n  }\n\n  handleChangeName = e =>{\n    const {name, value} = e.target\n    this.setState(\n      {[name]: value})\n      console.log(e.target.name) \n  };\n\n  addContact = ({name, number}) => {\n   console.log({name, number})\n   const contact = {\n   id: shortid.generate(),\n   name,\n   number,\n   }\n   this.setState(prevState => ({\n    contacts:[contact, ...prevState.contacts]}))\n   };\n\n   \n\n   getVisibleContacts = () => {\n    const {contacts, filter} =this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(contact=> contact.name.toLocaleLowerCase().includes(normalizedFilter)||\n    contact.number.includes(normalizedFilter));\n   }\n\n   resetFiler = () => {\n    this.setState({ filter: '' });\n  }\n\n  deleteContact = (contactId) => {\n    this.setState(({contacts})=> ({\n      contacts: contacts.filter(contact=> contact.id !== contactId)\n    }))\n  };\n\n  render() {\n    const {contacts, filter} =this.state;\n   \n    const visibleContacts =  this.getVisibleContacts()\n    // const countContacts = contacts.length\n    return (\n      <div className={s.container}>\n        <div className={s.phonebook}>\n          <h1 className={s.title}>Phonebook</h1>\n          \n          <ContactForm \n          contacts={contacts}\n          onSubmit={this.addContact}/>\n\n          <h2 className={s.titleContacts}>Contacts</h2>\n          <Filter \n          filter={filter}\n          resetFiler={this.resetFiler}\n          onChangeName={this.handleChangeName}\n          />\n          {/* <p> Total contacts: {countContacts}</p> */}\n          <ContactList \n          contacts={visibleContacts} \n          onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3onih\",\"list__item\":\"Contacts_list__item__fS2xQ\",\"list__item__tel\":\"Contacts_list__item__tel__3rGUB\",\"button\":\"Contacts_button__oXEdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2bzCD\",\"title\":\"App_title__1DSl1\",\"titleContacts\":\"App_titleContacts__guUfC\",\"phonebook\":\"App_phonebook__1689V\"};"],"sourceRoot":""}